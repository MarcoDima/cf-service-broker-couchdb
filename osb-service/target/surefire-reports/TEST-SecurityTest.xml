<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SecurityTest" time="30.302" tests="3" errors="1" skipped="0" failures="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="java.vm.version" value="9.0.4+11"/>
    <property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk-9.0.4.jdk/Contents/Home/lib"/>
    <property name="gopherProxySet" value="false"/>
    <property name="maven.multiModuleProjectDirectory" value="/Users/dima/evoila/cf-service-broker-couchdb"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="path.separator" value=":"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="user.country" value="DE"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/Users/dima/evoila/cf-service-broker-couchdb"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="java.runtime.version" value="9.0.4+11"/>
    <property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/>
    <property name="os.arch" value="x86_64"/>
    <property name="java.io.tmpdir" value="/var/folders/xq/krygb4_d3cjb1k17bxv1vgfh0000gn/T/"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="classworlds.conf" value="/Users/dima/apache-maven-3.5.2/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/dima/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="maven.conf" value="/Users/dima/apache-maven-3.5.2/conf"/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="53.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.13.3"/>
    <property name="library.jansi.path" value="/Users/dima/apache-maven-3.5.2/lib/jansi-native"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="user.home" value="/Users/dima"/>
    <property name="user.timezone" value="Europe/Berlin"/>
    <property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="9"/>
    <property name="user.name" value="dima"/>
    <property name="java.class.path" value="/Users/dima/apache-maven-3.5.2/boot/plexus-classworlds-2.5.2.jar"/>
    <property name="java.vm.specification.version" value="9"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher clean install"/>
    <property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk-9.0.4.jdk/Contents/Home"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="9.0.4"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/Users/dima/apache-maven-3.5.2"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.java.com/bugreport/"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="A_performGetNotAuthenticated" classname="SecurityTest" time="0.102"/>
  <testcase name="B_performPutWithCredentials_isAccepted" classname="SecurityTest" time="30.189">
    <error message="Request processing failed; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches ReadPreferenceServerSelector{readPreference=primary}. Client view of cluster state is {type=UNKNOWN, servers=[{address=127.0.0.1:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]" type="org.springframework.web.util.NestedServletException"><![CDATA[org.springframework.web.util.NestedServletException: Request processing failed; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches ReadPreferenceServerSelector{readPreference=primary}. Client view of cluster state is {type=UNKNOWN, servers=[{address=127.0.0.1:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]
	at com.mongodb.connection.BaseCluster.createTimeoutException(BaseCluster.java:377)
	at com.mongodb.connection.BaseCluster.selectServer(BaseCluster.java:104)
	at com.mongodb.binding.ClusterBinding$ClusterBindingConnectionSource.<init>(ClusterBinding.java:75)
	at com.mongodb.binding.ClusterBinding$ClusterBindingConnectionSource.<init>(ClusterBinding.java:71)
	at com.mongodb.binding.ClusterBinding.getReadConnectionSource(ClusterBinding.java:63)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:406)
	at com.mongodb.operation.FindOperation.execute(FindOperation.java:510)
	at com.mongodb.operation.FindOperation.execute(FindOperation.java:81)
	at com.mongodb.Mongo.execute(Mongo.java:836)
	at com.mongodb.Mongo$2.execute(Mongo.java:823)
	at com.mongodb.DBCursor.initializeCursor(DBCursor.java:870)
	at com.mongodb.DBCursor.hasNext(DBCursor.java:142)
	at org.springframework.data.mongodb.core.MongoTemplate.exists(MongoTemplate.java:629)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.exists(SimpleMongoRepository.java:141)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.executeMethodOn(RepositoryFactorySupport.java:520)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:505)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:477)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy145.exists(Unknown Source)
	at de.evoila.cf.broker.persistence.repository.ServiceInstanceRepositoryImpl.containsServiceInstanceId(ServiceInstanceRepositoryImpl.java:30)
	at de.evoila.cf.broker.service.DeploymentServiceImpl.createServiceInstance(DeploymentServiceImpl.java:97)
	at de.evoila.cf.broker.controller.ServiceInstanceController.createServiceInstance(ServiceInstanceController.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:664)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:65)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:160)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:127)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:127)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:155)
	at SecurityTest.B_performPutWithCredentials_isAccepted(SecurityTest.java:84)
]]></error>
    <system-out><![CDATA[LOGBACK:14:45:49.933 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring FrameworkServlet ''
LOGBACK:14:45:49.933 [main] INFO  o.s.t.w.s.TestDispatcherServlet - FrameworkServlet '': initialization started
LOGBACK:14:45:49.941 [main] INFO  o.s.t.w.s.TestDispatcherServlet - FrameworkServlet '': initialization completed in 8 ms
LOGBACK:14:45:49.992 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Looking up handler method for path /v2/service_instances/1234-5678-91011
LOGBACK:14:45:49.995 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Returning handler method [public org.springframework.http.ResponseEntity<de.evoila.cf.broker.model.ServiceInstanceResponse> de.evoila.cf.broker.controller.ServiceInstanceController.createServiceInstance(java.lang.String,java.lang.Boolean,de.evoila.cf.broker.model.ServiceInstanceRequest) throws de.evoila.cf.broker.exception.ServiceDefinitionDoesNotExistException,de.evoila.cf.broker.exception.ServiceInstanceExistsException,de.evoila.cf.broker.exception.ServiceBrokerException,de.evoila.cf.broker.exception.AsyncRequiredException,de.evoila.cf.broker.exception.ParameterNotNullException]
LOGBACK:14:45:50.020 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read [class de.evoila.cf.broker.model.ServiceInstanceRequest] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@4707d60a]
LOGBACK:14:45:50.094 [main] INFO  org.mongodb.driver.cluster - No server chosen by ReadPreferenceServerSelector{readPreference=primary} from cluster description ClusterDescription{type=UNKNOWN, connectionMode=MULTIPLE, serverDescriptions=[ServerDescription{address=127.0.0.1:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]}. Waiting for 30000 ms before timing out
LOGBACK:14:45:54.853 [springCloudBus.anonymous.EwRe9doLSzaT_TWTMPiE1g-1] WARN  o.s.a.r.l.SimpleMessageListenerContainer - Consumer raised exception, processing can restart if the connection factory supports it. Exception summary: org.springframework.amqp.AmqpConnectException: java.net.ConnectException: Can't assign requested address (connect failed)
LOGBACK:14:45:54.854 [springCloudBus.anonymous.EwRe9doLSzaT_TWTMPiE1g-1] INFO  o.s.a.r.l.SimpleMessageListenerContainer - Restarting Consumer@4d484eda: tags=[{}], channel=null, acknowledgeMode=AUTO local queue size=0
LOGBACK:14:45:59.921 [springCloudBus.anonymous.EwRe9doLSzaT_TWTMPiE1g-2] WARN  o.s.a.r.l.SimpleMessageListenerContainer - Consumer raised exception, processing can restart if the connection factory supports it. Exception summary: org.springframework.amqp.AmqpConnectException: java.net.ConnectException: Can't assign requested address (connect failed)
LOGBACK:14:45:59.922 [springCloudBus.anonymous.EwRe9doLSzaT_TWTMPiE1g-2] INFO  o.s.a.r.l.SimpleMessageListenerContainer - Restarting Consumer@d59c600: tags=[{}], channel=null, acknowledgeMode=AUTO local queue size=0
LOGBACK:14:46:04.992 [springCloudBus.anonymous.EwRe9doLSzaT_TWTMPiE1g-3] WARN  o.s.a.r.l.SimpleMessageListenerContainer - Consumer raised exception, processing can restart if the connection factory supports it. Exception summary: org.springframework.amqp.AmqpConnectException: java.net.ConnectException: Can't assign requested address (connect failed)
LOGBACK:14:46:04.992 [springCloudBus.anonymous.EwRe9doLSzaT_TWTMPiE1g-3] INFO  o.s.a.r.l.SimpleMessageListenerContainer - Restarting Consumer@446dd334: tags=[{}], channel=null, acknowledgeMode=AUTO local queue size=0
LOGBACK:14:46:10.072 [springCloudBus.anonymous.EwRe9doLSzaT_TWTMPiE1g-4] WARN  o.s.a.r.l.SimpleMessageListenerContainer - Consumer raised exception, processing can restart if the connection factory supports it. Exception summary: org.springframework.amqp.AmqpConnectException: java.net.ConnectException: Can't assign requested address (connect failed)
LOGBACK:14:46:10.072 [springCloudBus.anonymous.EwRe9doLSzaT_TWTMPiE1g-4] INFO  o.s.a.r.l.SimpleMessageListenerContainer - Restarting Consumer@436dbf80: tags=[{}], channel=null, acknowledgeMode=AUTO local queue size=0
LOGBACK:14:46:15.147 [springCloudBus.anonymous.EwRe9doLSzaT_TWTMPiE1g-5] WARN  o.s.a.r.l.SimpleMessageListenerContainer - Consumer raised exception, processing can restart if the connection factory supports it. Exception summary: org.springframework.amqp.AmqpConnectException: java.net.ConnectException: Can't assign requested address (connect failed)
LOGBACK:14:46:15.147 [springCloudBus.anonymous.EwRe9doLSzaT_TWTMPiE1g-5] INFO  o.s.a.r.l.SimpleMessageListenerContainer - Restarting Consumer@3ce44162: tags=[{}], channel=null, acknowledgeMode=AUTO local queue size=0
LOGBACK:14:46:20.099 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolving exception from handler [public org.springframework.http.ResponseEntity<de.evoila.cf.broker.model.ServiceInstanceResponse> de.evoila.cf.broker.controller.ServiceInstanceController.createServiceInstance(java.lang.String,java.lang.Boolean,de.evoila.cf.broker.model.ServiceInstanceRequest) throws de.evoila.cf.broker.exception.ServiceDefinitionDoesNotExistException,de.evoila.cf.broker.exception.ServiceInstanceExistsException,de.evoila.cf.broker.exception.ServiceBrokerException,de.evoila.cf.broker.exception.AsyncRequiredException,de.evoila.cf.broker.exception.ParameterNotNullException]: com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches ReadPreferenceServerSelector{readPreference=primary}. Client view of cluster state is {type=UNKNOWN, servers=[{address=127.0.0.1:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]
LOGBACK:14:46:20.102 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolving exception from handler [public org.springframework.http.ResponseEntity<de.evoila.cf.broker.model.ServiceInstanceResponse> de.evoila.cf.broker.controller.ServiceInstanceController.createServiceInstance(java.lang.String,java.lang.Boolean,de.evoila.cf.broker.model.ServiceInstanceRequest) throws de.evoila.cf.broker.exception.ServiceDefinitionDoesNotExistException,de.evoila.cf.broker.exception.ServiceInstanceExistsException,de.evoila.cf.broker.exception.ServiceBrokerException,de.evoila.cf.broker.exception.AsyncRequiredException,de.evoila.cf.broker.exception.ParameterNotNullException]: com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches ReadPreferenceServerSelector{readPreference=primary}. Client view of cluster state is {type=UNKNOWN, servers=[{address=127.0.0.1:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]
LOGBACK:14:46:20.103 [main] DEBUG o.s.w.s.m.a.ResponseStatusExceptionResolver - Resolving exception from handler [public org.springframework.http.ResponseEntity<de.evoila.cf.broker.model.ServiceInstanceResponse> de.evoila.cf.broker.controller.ServiceInstanceController.createServiceInstance(java.lang.String,java.lang.Boolean,de.evoila.cf.broker.model.ServiceInstanceRequest) throws de.evoila.cf.broker.exception.ServiceDefinitionDoesNotExistException,de.evoila.cf.broker.exception.ServiceInstanceExistsException,de.evoila.cf.broker.exception.ServiceBrokerException,de.evoila.cf.broker.exception.AsyncRequiredException,de.evoila.cf.broker.exception.ParameterNotNullException]: com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches ReadPreferenceServerSelector{readPreference=primary}. Client view of cluster state is {type=UNKNOWN, servers=[{address=127.0.0.1:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]
LOGBACK:14:46:20.103 [main] DEBUG o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolving exception from handler [public org.springframework.http.ResponseEntity<de.evoila.cf.broker.model.ServiceInstanceResponse> de.evoila.cf.broker.controller.ServiceInstanceController.createServiceInstance(java.lang.String,java.lang.Boolean,de.evoila.cf.broker.model.ServiceInstanceRequest) throws de.evoila.cf.broker.exception.ServiceDefinitionDoesNotExistException,de.evoila.cf.broker.exception.ServiceInstanceExistsException,de.evoila.cf.broker.exception.ServiceBrokerException,de.evoila.cf.broker.exception.AsyncRequiredException,de.evoila.cf.broker.exception.ParameterNotNullException]: com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches ReadPreferenceServerSelector{readPreference=primary}. Client view of cluster state is {type=UNKNOWN, servers=[{address=127.0.0.1:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]
]]></system-out>
  </testcase>
  <testcase name="C_performPutWithoutCredentials_isUnauthorized" classname="SecurityTest" time="0.011"/>
</testsuite>